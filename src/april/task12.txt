В задаче 11 использовал два мьютекса (parentLock и childLock) для синхронизации вывода.
Это работает, потому что родительский поток начинает первым, так как childLock изначально заблокирован.
Затем родительский поток блокирует parentLock, выводит строку, затем разблокирует childLock, позволяя дочернему потоку выполниться.
Этот процесс повторяется, обеспечивая СТРОГОЕ чередование, при котором исключены другие варианты развития событий.

В задаче 12 утверждается, что задача не может быть решена только с использованием двух мьютексов без других средств синхронизации.
Это означает, что если мы ограничимся только двумя мьютексами и не будем использовать дополнительные механизмы
(например, инициализацию одного мьютекса в заблокированном состоянии), то задача не будет решена корректно.

Мьютексы обеспечивают только взаимное исключение. Они не гарантируют порядок выполнения потоков.
Без дополнительной логики невозможно гарантировать, что потоки будут строго чередоваться.
Если оба мьютекса изначально разблокированы, то оба потока могут одновременно попытаться захватить свои мьютексы,
что приведет к гонке (race condition) и нарушению порядка вывода.
